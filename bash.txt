
Chloe@LAPTOP-L3BKOSV0 MINGW64 ~
$ mkdir git-tutorial

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~
$ cd git-tutorial

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial
$ git init
Initialized empty Git repository in C:/Users/Chloe/git-tutorial/.git/

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ lesson 1.txt
bash: lesson: command not found

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ touch lesson1.txt

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ touch lesson1.jpg

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        lesson1.jpg
        lesson1.txt

nothing added to commit but untracked files present (use "git add" to track)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add lesson1.txt

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   lesson1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        lesson1.jpg


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git rm lesson1.txt
error: the following file has changes staged in the index:
    lesson1.txt
(use --cached to keep the file, or -f to force removal)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git rm --cashed lesson1.txt
error: unknown option `cashed'
usage: git rm [<options>] [--] <file>...

    -n, --dry-run         dry run
    -q, --quiet           do not list removed files
    --cached              only remove from the index
    -f, --force           override the up-to-date check
    -r                    allow recursive removal
    --ignore-unmatch      exit with a zero status even if nothing matched
    --pathspec-from-file <file>
                          read pathspec from file
    --pathspec-file-nul   with --pathspec-from-file, pathspec elements are separated with NUL character


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git rm --cashed<lesson1.txt>
bash: syntax error near unexpected token `newline'

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   lesson1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        lesson1.jpg


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git rm --cached lesson1.txt
rm 'lesson1.txt'

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git status
On branch master

No commits yet

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        lesson1.jpg
        lesson1.txt

nothing added to commit but untracked files present (use "git add" to track)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add -A

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git status
On branch master

No commits yet

Changes to be committed:
  (use "git rm --cached <file>..." to unstage)
        new file:   lesson1.jpg
        new file:   lesson1.txt


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"add lesson1.txt"
[master (root-commit) 8655abd] add lesson1.txt
 2 files changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 lesson1.jpg
 create mode 100644 lesson1.txt

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git remote add origin
usage: git remote add [<options>] <name> <url>

    -f, --fetch           fetch the remote branches
    --tags                import all tags and associated objects when fetching
                          or do not fetch any tag at all (--no-tags)
    -t, --track <branch>  branch(es) to track
    -m, --master <branch>
                          master branch
    --mirror[=(push|fetch)]
                          set up remote as a mirror to push to or fetch from


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git remote add origin https://github.com/yochieh-yang/github0620.git

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u origin master
Logon failed, use ctrl+c to cancel basic credential prompt.


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git remote -v
origin  https://github.com/yochieh-yang/github0620.git (fetch)
origin  https://github.com/yochieh-yang/github0620.git (push)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u origin master
Logon failed, use ctrl+c to cancel basic credential prompt.
error: unable to read askpass response from 'C:/Git/mingw64/libexec/git-core/git-gui--askpass'
Username for 'https://github.com':
Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push origin master
Logon failed, use ctrl+c to cancel basic credential prompt.
error: unable to read askpass response from 'C:/Git/mingw64/libexec/git-core/git-gui--askpass'
Username for 'https://github.com':
Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u origin master
Logon failed, use ctrl+c to cancel basic credential prompt.
remote: Invalid username or password.
fatal: Authentication failed for 'https://github.com/yochieh-yang/github0620.git/'

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ ^C

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u origin master
Logon failed, use ctrl+c to cancel basic credential prompt.
remote: You must verify your email address.
remote: See https://github.com/settings/emails.
fatal: unable to access 'https://github.com/yochieh-yang/github0620.git/': The requested URL returned error: 403

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u
fatal: The current branch master has no upstream branch.
To push the current branch and set the remote as upstream, use

    git push --set-upstream origin master


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u origin master
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 241 bytes | 60.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/yochieh-yang/github0620.git
 * [new branch]      master -> master
Branch 'master' set up to track remote branch 'master' from 'origin'.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git clonehttps://github.com/yochieh-yang/github0620.git
git: 'clonehttps://github.com/yochieh-yang/github0620.git' is not a git command. See 'git --help'.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git clone https://github.com/yochieh-yang/github0620.git
Cloning into 'github0620'...
remote: Enumerating objects: 3, done.
remote: Counting objects: 100% (3/3), done.
remote: Compressing objects: 100% (2/2), done.
remote: Total 3 (delta 0), reused 3 (delta 0), pack-reused 0
Unpacking objects: 100% (3/3), 221 bytes | 15.00 KiB/s, done.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git clone https://github.com/yochieh-yang/github0620.git
fatal: destination path 'github0620' already exists and is not an empty directory.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ vim lesson1.txt
Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git status
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   lesson1.txt

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        github0620/

no changes added to commit (use "git add" and/or "git commit -a")

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add lesson1.txt

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit"modify1 lesson1.txt"
git: 'commitmodify1 lesson1.txt' is not a git command. See 'git --help'.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push
Everything up-to-date

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u origin master
fatal: unable to access 'https://github.com/yochieh-yang/github0620.git/': Could not resolve host: github.com

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u
fatal: unable to access 'https://github.com/yochieh-yang/github0620.git/': Could not resolve host: github.com

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git clone
fatal: You must specify a repository to clone.

usage: git clone [<options>] [--] <repo> [<dir>]

    -v, --verbose         be more verbose
    -q, --quiet           be more quiet
    --progress            force progress reporting
    -n, --no-checkout     don't create a checkout
    --bare                create a bare repository
    --mirror              create a mirror repository (implies bare)
    -l, --local           to clone from a local repository
    --no-hardlinks        don't use local hardlinks, always copy
    -s, --shared          setup as shared repository
    --recurse-submodules[=<pathspec>]
                          initialize submodules in the clone
    --recursive ...       alias of --recurse-submodules
    -j, --jobs <n>        number of submodules cloned in parallel
    --template <template-directory>
                          directory from which templates will be used
    --reference <repo>    reference repository
    --reference-if-able <repo>
                          reference repository
    --dissociate          use --reference only while cloning
    -o, --origin <name>   use <name> instead of 'origin' to track upstream
    -b, --branch <branch>
                          checkout <branch> instead of the remote's HEAD
    -u, --upload-pack <path>
                          path to git-upload-pack on the remote
    --depth <depth>       create a shallow clone of that depth
    --shallow-since <time>
                          create a shallow clone since a specific time
    --shallow-exclude <revision>
                          deepen history of shallow clone, excluding rev
    --single-branch       clone only one branch, HEAD or --branch
    --no-tags             don't clone any tags, and make later fetches not to follow them
    --shallow-submodules  any cloned submodules will be shallow
    --separate-git-dir <gitdir>
                          separate git dir from working tree
    -c, --config <key=value>
                          set config inside the new repository
    --server-option <server-specific>
                          option to transmit
    -4, --ipv4            use IPv4 addresses only
    -6, --ipv6            use IPv6 addresses only
    --filter <args>       object filtering
    --remote-submodules   any cloned submodules will use their remote-tracking branch
    --sparse              initialize sparse-checkout file to include only files at root


Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git clone https://github.com/yochieh-yang/github0620.git
fatal: destination path 'github0620' already exists and is not an empty directory.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push -u
Everything up-to-date
Branch 'master' set up to track remote branch 'master' from 'origin'.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add lesson1.txt

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m "modify1 lesson1.txt"
[master b019d0c] modify1 lesson1.txt
 1 file changed, 2 insertions(+)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 326 bytes | 108.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/yochieh-yang/github0620.git
   8655abd..b019d0c  master -> master

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add README620.md
fatal: pathspec 'README620.md' did not match any files

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ touch README.md

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add README.md

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit README.md
Aborting commit due to empty commit message.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"README.md"
[master 3414519] README.md
 1 file changed, 0 insertions(+), 0 deletions(-)
 create mode 100644 README.md

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push
Enumerating objects: 3, done.
Counting objects: 100% (3/3), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (2/2), 294 bytes | 294.00 KiB/s, done.
Total 2 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/yochieh-yang/github0620.git
   b019d0c..3414519  master -> master

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ vim README.md

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add README.md
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"modify1 README.md"
[master 6240729] modify1 README.md
 1 file changed, 2 insertions(+)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 349 bytes | 349.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/yochieh-yang/github0620.git
   3414519..6240729  master -> master

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ vim readme.md

[1]+  Stopped                 vim readme.md

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ vim readme.nmd

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ vim readme.md

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit"modify2 README.md"
git: 'commitmodify2 README.md' is not a git command. See 'git --help'.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"modift2 README.md"
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .README.md.swp
        github0620/
        readme.nmd

no changes added to commit (use "git add" and/or "git commit -a")

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add modify2 README.md
fatal: pathspec 'modify2' did not match any files

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"modufy2 README.md"
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .README.md.swp
        github0620/
        readme.nmd

no changes added to commit (use "git add" and/or "git commit -a")

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add"README.md"
git: 'addREADME.md' is not a git command. See 'git --help'.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"modify2 README.md"
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .README.md.swp
        github0620/
        readme.nmd

no changes added to commit (use "git add" and/or "git commit -a")

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add README.md
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"m2 README.md"
[master a7681e7] m2 README.md
 1 file changed, 1 insertion(+), 1 deletion(-)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (2/2), done.
Writing objects: 100% (3/3), 345 bytes | 345.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/yochieh-yang/github0620.git
   6240729..a7681e7  master -> master

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ vim readme.md

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"m3 README.md"
On branch master
Your branch is up to date with 'origin/master'.

Changes not staged for commit:
  (use "git add <file>..." to update what will be committed)
  (use "git restore <file>..." to discard changes in working directory)
        modified:   README.md

Untracked files:
  (use "git add <file>..." to include in what will be committed)
        .README.md.swp
        github0620/
        readme.nmd

no changes added to commit (use "git add" and/or "git commit -a")

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git add README.md
warning: LF will be replaced by CRLF in README.md.
The file will have its original line endings in your working directory

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git commit -m"m3 README.md"
[master 3b79f7b] m3 README.md
 1 file changed, 2 insertions(+), 2 deletions(-)

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git push
Enumerating objects: 5, done.
Counting objects: 100% (5/5), done.
Delta compression using up to 8 threads
Compressing objects: 100% (3/3), done.
Writing objects: 100% (3/3), 384 bytes | 384.00 KiB/s, done.
Total 3 (delta 0), reused 0 (delta 0), pack-reused 0
To https://github.com/yochieh-yang/github0620.git
   a7681e7..3b79f7b  master -> master

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ cat README.md
 Hello Chloe
 It's your first time learning this stuff.

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$ git version
git version 2.27.0.windows.1

Chloe@LAPTOP-L3BKOSV0 MINGW64 ~/git-tutorial (master)
$
